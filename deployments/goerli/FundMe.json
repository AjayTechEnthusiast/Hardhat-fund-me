{
  "address": "0xf90769b39A2c9d44d4760a5c82938bC031a72534",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "notOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xd406ce337fb1721bc8caad220ba44b3b6189fef80a831cd69e2e7e7d96487e36",
  "receipt": {
    "to": null,
    "from": "0x7E89D4572f59B4604571121339d4aA99e57B1Ff0",
    "contractAddress": "0xf90769b39A2c9d44d4760a5c82938bC031a72534",
    "transactionIndex": 65,
    "gasUsed": "1011687",
    "logsBloom": "0x
    "blockHash": "0x7ae1f9db840f4cc60026595dd643739d58a0004cc2b73b5524f3017d9c248af9",
    "transactionHash": "0xd406ce337fb1721bc8caad220ba44b3b6189fef80a831cd69e2e7e7d96487e36",
    "logs": [],
    "blockNumber": 7628127,
    "cumulativeGasUsed": "15512906",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "695199d634ffdc886d1616a120106555",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"notOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nerror notOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant minimumUSD = 50 * 1e18;\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address public immutable owner;\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= minimumUSD,\\n            \\\"Didn't send enough!\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory m_funders = funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < m_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = m_funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        (bool callSuccess, ) = owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner,\\\"Sender is not the owner\\\");\\n        if (msg.sender != owner) {\\n            revert notOwner();\\n        }\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x81104eb7a4c1060bb0c5cbc35cd728956e607f0928c879155dd5acc09afd9138\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        //https://goerli.etherscan.io/address/0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\r\\n\\r\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\r\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e // 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\r\\n        // );\\r\\n        (, int price, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getVersion() internal view returns (uint256) {\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\r\\n            0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\r\\n        );\\r\\n        return priceFeed.version();\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUSD = (ethPrice * ethAmount) / 1e18;\\r\\n        return ethAmountInUSD;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x16a03e13f83187f0dfc20babd10b3606593e2dbeb0e831abf1dfac416ad232cc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200127738038062001277833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6110f162000186600039600081816102f60152818161057401528181610598015261078e01526110f16000f3fe60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b14610142578063b60d42881461016d578063be2693f014610177578063dc0d3dff146101815761008e565b80633430a88c146100985780633ccfd60b146100c35780633e47d6f3146100da578063741bef1a146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100ad6102e7565b6040516100ba9190610a35565b60405180910390f35b3480156100cf57600080fd5b506100d86102f4565b005b3480156100e657600080fd5b5061010160048036038101906100fc9190610ab3565b610534565b60405161010e9190610a35565b60405180910390f35b34801561012357600080fd5b5061012c61054c565b6040516101399190610b3f565b60405180910390f35b34801561014e57600080fd5b50610157610572565b6040516101649190610b69565b60405180910390f35b6101756101be565b005b61017f610596565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610bb0565b61085a565b6040516101b59190610b69565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089990919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c3a565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610379576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561042457600080828154811061039e5761039d610c5a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061041c90610cb8565b91505061037c565b50600067ffffffffffffffff8111156104405761043f610d01565b5b60405190808252806020026020018201604052801561046e5781602001602082028036833780820191505090505b5060009080519060200190610484929190610975565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104ab90610d61565b60006040518083038185875af1925050503d80600081146104e8576040519150601f19603f3d011682016040523d82523d6000602084013e6104ed565b606091505b5050905080610531576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052890610dc2565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461061b576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561069e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610654575b5050505050905060005b81518110156107295760008282815181106106c6576106c5610c5a565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061072190610cb8565b9150506106a8565b50600067ffffffffffffffff81111561074557610744610d01565b5b6040519080825280602002602001820160405280156107735781602001602082028036833780820191505090505b5060009080519060200190610789929190610975565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107d090610d61565b60006040518083038185875af1925050503d806000811461080d576040519150601f19603f3d011682016040523d82523d6000602084013e610812565b606091505b5050905080610856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084d90610dc2565b60405180910390fd5b5050565b6000818154811061086a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806108a5836108d5565b90506000670de0b6b3a764000085836108be9190610de2565b6108c89190610e6b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091e57600080fd5b505afa158015610932573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109569190610f29565b5050509150506402540be4008161096d9190610fa4565b915050919050565b8280548282559060005260206000209081019282156109ee579160200282015b828111156109ed5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610995565b5b5090506109fb91906109ff565b5090565b5b80821115610a18576000816000905550600101610a00565b5090565b6000819050919050565b610a2f81610a1c565b82525050565b6000602082019050610a4a6000830184610a26565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8082610a55565b9050919050565b610a9081610a75565b8114610a9b57600080fd5b50565b600081359050610aad81610a87565b92915050565b600060208284031215610ac957610ac8610a50565b5b6000610ad784828501610a9e565b91505092915050565b6000819050919050565b6000610b05610b00610afb84610a55565b610ae0565b610a55565b9050919050565b6000610b1782610aea565b9050919050565b6000610b2982610b0c565b9050919050565b610b3981610b1e565b82525050565b6000602082019050610b546000830184610b30565b92915050565b610b6381610a75565b82525050565b6000602082019050610b7e6000830184610b5a565b92915050565b610b8d81610a1c565b8114610b9857600080fd5b50565b600081359050610baa81610b84565b92915050565b600060208284031215610bc657610bc5610a50565b5b6000610bd484828501610b9b565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610c24601383610bdd565b9150610c2f82610bee565b602082019050919050565b60006020820190508181036000830152610c5381610c17565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cc382610a1c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cf657610cf5610c89565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d4b600083610d30565b9150610d5682610d3b565b600082019050919050565b6000610d6c82610d3e565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610dac600b83610bdd565b9150610db782610d76565b602082019050919050565b60006020820190508181036000830152610ddb81610d9f565b9050919050565b6000610ded82610a1c565b9150610df883610a1c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e3157610e30610c89565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e7682610a1c565b9150610e8183610a1c565b925082610e9157610e90610e3c565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ebb81610e9c565b8114610ec657600080fd5b50565b600081519050610ed881610eb2565b92915050565b6000819050919050565b610ef181610ede565b8114610efc57600080fd5b50565b600081519050610f0e81610ee8565b92915050565b600081519050610f2381610b84565b92915050565b600080600080600060a08688031215610f4557610f44610a50565b5b6000610f5388828901610ec9565b9550506020610f6488828901610eff565b9450506040610f7588828901610f14565b9350506060610f8688828901610f14565b9250506080610f9788828901610ec9565b9150509295509295909350565b6000610faf82610ede565b9150610fba83610ede565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ff957610ff8610c89565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561103657611035610c89565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561107357611072610c89565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110b0576110af610c89565b5b82820290509291505056fea26469706673582212209d7f6afac5c66836a4a390aeb4b6ba2111850987a38d329bebb32cf18f92a8c864736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b14610142578063b60d42881461016d578063be2693f014610177578063dc0d3dff146101815761008e565b80633430a88c146100985780633ccfd60b146100c35780633e47d6f3146100da578063741bef1a146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100ad6102e7565b6040516100ba9190610a35565b60405180910390f35b3480156100cf57600080fd5b506100d86102f4565b005b3480156100e657600080fd5b5061010160048036038101906100fc9190610ab3565b610534565b60405161010e9190610a35565b60405180910390f35b34801561012357600080fd5b5061012c61054c565b6040516101399190610b3f565b60405180910390f35b34801561014e57600080fd5b50610157610572565b6040516101649190610b69565b60405180910390f35b6101756101be565b005b61017f610596565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610bb0565b61085a565b6040516101b59190610b69565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089990919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c3a565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610379576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561042457600080828154811061039e5761039d610c5a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061041c90610cb8565b91505061037c565b50600067ffffffffffffffff8111156104405761043f610d01565b5b60405190808252806020026020018201604052801561046e5781602001602082028036833780820191505090505b5060009080519060200190610484929190610975565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104ab90610d61565b60006040518083038185875af1925050503d80600081146104e8576040519150601f19603f3d011682016040523d82523d6000602084013e6104ed565b606091505b5050905080610531576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052890610dc2565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461061b576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561069e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610654575b5050505050905060005b81518110156107295760008282815181106106c6576106c5610c5a565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061072190610cb8565b9150506106a8565b50600067ffffffffffffffff81111561074557610744610d01565b5b6040519080825280602002602001820160405280156107735781602001602082028036833780820191505090505b5060009080519060200190610789929190610975565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107d090610d61565b60006040518083038185875af1925050503d806000811461080d576040519150601f19603f3d011682016040523d82523d6000602084013e610812565b606091505b5050905080610856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084d90610dc2565b60405180910390fd5b5050565b6000818154811061086a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806108a5836108d5565b90506000670de0b6b3a764000085836108be9190610de2565b6108c89190610e6b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091e57600080fd5b505afa158015610932573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109569190610f29565b5050509150506402540be4008161096d9190610fa4565b915050919050565b8280548282559060005260206000209081019282156109ee579160200282015b828111156109ed5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610995565b5b5090506109fb91906109ff565b5090565b5b80821115610a18576000816000905550600101610a00565b5090565b6000819050919050565b610a2f81610a1c565b82525050565b6000602082019050610a4a6000830184610a26565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8082610a55565b9050919050565b610a9081610a75565b8114610a9b57600080fd5b50565b600081359050610aad81610a87565b92915050565b600060208284031215610ac957610ac8610a50565b5b6000610ad784828501610a9e565b91505092915050565b6000819050919050565b6000610b05610b00610afb84610a55565b610ae0565b610a55565b9050919050565b6000610b1782610aea565b9050919050565b6000610b2982610b0c565b9050919050565b610b3981610b1e565b82525050565b6000602082019050610b546000830184610b30565b92915050565b610b6381610a75565b82525050565b6000602082019050610b7e6000830184610b5a565b92915050565b610b8d81610a1c565b8114610b9857600080fd5b50565b600081359050610baa81610b84565b92915050565b600060208284031215610bc657610bc5610a50565b5b6000610bd484828501610b9b565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610c24601383610bdd565b9150610c2f82610bee565b602082019050919050565b60006020820190508181036000830152610c5381610c17565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cc382610a1c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cf657610cf5610c89565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d4b600083610d30565b9150610d5682610d3b565b600082019050919050565b6000610d6c82610d3e565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610dac600b83610bdd565b9150610db782610d76565b602082019050919050565b60006020820190508181036000830152610ddb81610d9f565b9050919050565b6000610ded82610a1c565b9150610df883610a1c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e3157610e30610c89565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e7682610a1c565b9150610e8183610a1c565b925082610e9157610e90610e3c565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ebb81610e9c565b8114610ec657600080fd5b50565b600081519050610ed881610eb2565b92915050565b6000819050919050565b610ef181610ede565b8114610efc57600080fd5b50565b600081519050610f0e81610ee8565b92915050565b600081519050610f2381610b84565b92915050565b600080600080600060a08688031215610f4557610f44610a50565b5b6000610f5388828901610ec9565b9550506020610f6488828901610eff565b9450506040610f7588828901610f14565b9350506060610f8688828901610f14565b9250506080610f9788828901610ec9565b9150509295509295909350565b6000610faf82610ede565b9150610fba83610ede565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ff957610ff8610c89565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561103657611035610c89565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561107357611072610c89565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110b0576110af610c89565b5b82820290509291505056fea26469706673582212209d7f6afac5c66836a4a390aeb4b6ba2111850987a38d329bebb32cf18f92a8c864736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}